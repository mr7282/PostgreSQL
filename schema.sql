-- Данная база данных предназначена для удаленной комуникации различных служб
-- осуществляющих ежедневную работу по обработке штатного расписания силового
-- подразделения для формирования расстановки личного состава в соответствии
-- с дислокацией. Таблицей admin назнач. роли с различной степенью доступа.
-- Таблица employees содержит персонал. информацию сотрудников подразделения.
-- staff_member и rank содержит перчечень должностей и званий. transport хранит
-- данные о т/с и закрепленных за ними сотрудниками. celender содержит хар-ку
-- конкретной даты и о сменах. Таблицы duty_officer,  daily_controller, office,
-- patrol, compensation_time, vacantion, sick, secondment содержат информацию
-- о статусе сотрудника на конкретную дату. patrol_route и type_patrole_route
-- хранят информацию о маршрутах и их характеристиках.

create table if not EXISTS admins (
    id INTEGER generated by default as identity,
    login text not null,
    pass text not null,
    surname text not null,
    name text not null,
    patronymic text not null,
    role text not null,
    created_at timestamp DEFAULT current_timestamp,
    updated_at timestamp DEFAULT current_timestamp,
    deleted_at timestamp DEFAULT current_timestamp,
    constraint admins_pkey_id primary key (id)
);

CREATE TABLE IF NOT EXISTS ranks (
    id integer generated by default as identity,
    ranks_name text not null,
    constraint ranks_pkey_id primary key (id)
);

CREATE TABLE IF NOT EXISTS staff_member (
    id integer generated by default as IDENTITY,
    post_name text not null,
    rank_id integer not null,
    salary integer not null,
    constraint staff_member_pkey_id primary key (id),
    constraint staff_member_fk_rank_id foreign key (rank_id) REFERENCES ranks (id) on delete restrict
);

create table if not exists employees (
    id integer not null,
    surname text not null,
    name text not null,
    patronymic text not null,
    birth_date date not null,
    badge text not null,
    personal_number text not null,
    ranks_id integer not null,
    rank_doc_basis text not null,
    staff_member_id integer not null,
    staff_member_doc_basis text not null,
    staff_member_id_fact integer not null, -- чем занимается фактически (прим. ИДПС -> инспектор ИАЗ)
    adress text not null,
    telephone text not null,
    dismissal bool not null,
    admins_id integer not null,
    created_at timestamp DEFAULT current_timestamp,
    updated_at timestamp DEFAULT current_timestamp,
    deleted_at timestamp DEFAULT current_timestamp,
    constraint employees_pkey_id primary key (id),
    constraint employees_fk_admins_id FOREIGN key (admins_id) REFERENCES admins (id) on delete RESTRICT,
    constraint employees_fk_ranks_id FOREIGN key (ranks_id) REFERENCES ranks (id) on delete RESTRICT,
    constraint employees_fk_staff_member_id FOREIGN key (staff_member_id) REFERENCES staff_member (id) on delete RESTRICT,
    constraint employees_fk_staff_member_id_fact FOREIGN key (staff_member_id_fact) REFERENCES staff_member (id) on delete RESTRICT
);

CREATE TABLE IF NOT EXISTS transports (
    license_plate text,
    brend text not null,
    model text not null,
    sirene bool not null,
    attached_1_employees_id integer not null,
    attached_2_employees_id integer not null,
    attached_3_employees_id integer not null,
    attached_4_employees_id integer not null,
    admins_id integer not null,
    created_at timestamp DEFAULT current_timestamp,
    updated_at timestamp DEFAULT current_timestamp,
    deleted_at timestamp DEFAULT current_timestamp,
    constraint trasports_pkey_license_plate primary key (license_plate),
    constraint transports_fk_attached_1_employees_id foreign key (attached_1_employees_id) references employees (id) on delete restrict,
    constraint transports_fk_attached_2_employees_id foreign key (attached_2_employees_id) references employees (id) on delete restrict,
    constraint transports_fk_attached_3_employees_id foreign key (attached_3_employees_id) references employees (id) on delete restrict,
    constraint transports_fk_attached_4_employees_id foreign key (attached_4_employees_id) references employees (id) on delete restrict,
    constraint transports_fk_admins_id FOREIGN key (admins_id) REFERENCES admins (id) on delete RESTRICT
);

CREATE TABLE IF NOT EXISTS celender (
    date date,
    shift_day int not null,
    shift_night int not null,
    holiday bool not null,
    admins_id integer not null,
    created_at timestamp DEFAULT current_timestamp,
    updated_at timestamp DEFAULT current_timestamp,
    deleted_at timestamp DEFAULT current_timestamp,
    constraint celender_pkey_date primary key (date),
    constraint celender_fk_admins_id FOREIGN key (admins_id) REFERENCES admins (id) on delete RESTRICT
);

CREATE TABLE IF NOT EXISTS duty_officers (
    date date,
    senior_duty_officer_employees_id int not null,
    junior_duty_officer_employees_id int not null,
    assistant_duty_officer_employees_id int not null,
    admins_id integer not null,
    constraint duty_officers_pkey_date primary key (date),
    constraint duty_officers_fk_senior_duty_officer_employees_id FOREIGN key (senior_duty_officer_employees_id) REFERENCES employees (id) on delete RESTRICT,
    constraint duty_officers_fk_junior_duty_officer_employees_id FOREIGN key (junior_duty_officer_employees_id) REFERENCES employees (id) on delete RESTRICT,
    constraint duty_officers_fk_assistant_duty_officer_employees_id FOREIGN key (assistant_duty_officer_employees_id) REFERENCES employees (id) on delete RESTRICT,
    constraint duty_officers_fk_admins_id FOREIGN key (admins_id) REFERENCES admins (id) on delete RESTRICT
);

CREATE TABLE IF NOT EXISTS daily_controllers (
    id int,
    date date not null,
    employees_id int not null,
    bigBuilding bool not null,
    admins_id integer not null,
    constraint daily_controllers_pkey_id primary key (id),
    constraint daily_controllers_fk_employees_id FOREIGN key (employees_id) REFERENCES employees (id) on delete RESTRICT,
    constraint daily_controllers_fk_admins_id FOREIGN key (admins_id) REFERENCES admins (id) on delete RESTRICT
);

CREATE TABLE IF NOT EXISTS office (
    id int,
    date date not null,
    employees_id int not null,
    admins_id integer not null,
    constraint office_pkey_id primary key (id),
    constraint office_fk_employees_id FOREIGN key (employees_id) REFERENCES employees (id) on delete RESTRICT,
    constraint office_fk_admins_id FOREIGN key (admins_id) REFERENCES admins (id) on delete RESTRICT
);

create table if not exists type_patrole_route (
    id integer,
    type text not null,
    constraint type_patrole_route_pkey_id primary key (id)
);

CREATE TABLE IF NOT EXISTS patrol_routes (
    route_number text,
    type_patrole_route_id integer not null,
    description text not null,
    url_patrole_route_map text not null,
    admins_id integer not null,
    constraint patrol_routes_pkey_route_number primary key (route_number),
    constraint patrol_routes_fk_type_patrole_route_id FOREIGN key (type_patrole_route_id) REFERENCES type_patrole_route (id) on delete RESTRICT,
    constraint patrol_routes_fk_admins_id FOREIGN key (admins_id) REFERENCES admins (id) on delete RESTRICT
);

CREATE TABLE IF NOT EXISTS patrol (
    id int,
    date date not null,
    employees_id int not null,
    patrol_routes_route_number text not null,
    transports_license_plate text not null,
    admins_id integer not null,
    constraint patrol_pkey_id primary key (id),
    constraint patrol_fk_employees_id FOREIGN key (employees_id) REFERENCES employees (id) on delete RESTRICT,
    constraint patrol_fk_patrol_routes_route_number FOREIGN key (patrol_routes_route_number) REFERENCES patrol_routes (route_number) on delete RESTRICT,
    constraint patrol_fk_transports_license_plate FOREIGN key (transports_license_plate) REFERENCES transports (license_plate) on delete RESTRICT,
    constraint patrol_fk_admins_id FOREIGN key (admins_id) REFERENCES admins (id) on delete RESTRICT
);

CREATE TABLE IF NOT EXISTS compensation_time (
    id int,
    date_weekend date not null,
    employees_id int not null,
    url_scan_doc text not null,
    admins_id integer not null,
    created_at timestamp DEFAULT current_timestamp,
    updated_at timestamp DEFAULT current_timestamp,
    deleted_at timestamp DEFAULT current_timestamp,
    constraint compensation_timee_pkey_id primary key (id),
    constraint compensation_time_fk_employees_id FOREIGN key (employees_id) REFERENCES employees (id) on delete RESTRICT,
    constraint compensation_time_fk_admins_id FOREIGN key (admins_id) REFERENCES admins (id) on delete RESTRICT
);

CREATE TABLE IF NOT EXISTS vacation (
    id int,
    employees_id int not null,
    start_vacation date not null,
    finish_vacation date not null,
    url_scan_doc text not null,
    admins_id integer not null,
    created_at timestamp DEFAULT current_timestamp,
    updated_at timestamp DEFAULT current_timestamp,
    deleted_at timestamp DEFAULT current_timestamp,
    constraint vacation_pkey_id primary key (id),
    constraint vacation_fk_employees_id FOREIGN key (employees_id) REFERENCES employees (id) on delete RESTRICT,
    constraint vacation_fk_admins_id FOREIGN key (admins_id) REFERENCES admins (id) on delete RESTRICT
);

CREATE TABLE IF NOT EXISTS sick (
    id int,
    employees_id int not null,
    start_sick date not null,
    finish_sick date not null,
    url_scan_doc text not null,
    admins_id integer not null,
    created_at timestamp DEFAULT current_timestamp,
    updated_at timestamp DEFAULT current_timestamp,
    deleted_at timestamp DEFAULT current_timestamp,
    constraint sick_pkey_id primary key (id),
    constraint sick_fk_employees_id FOREIGN key (employees_id) REFERENCES employees (id) on delete RESTRICT,
    constraint sick_fk_admins_id FOREIGN key (admins_id) REFERENCES admins (id) on delete RESTRICT
);

CREATE TABLE IF NOT EXISTS secondment  (
    id int,
    employees_id int not null,
    start_secondment  date not null,
    finish_secondment  date not null,
    url_scan_doc text not null,
    admins_id integer not null,
    created_at timestamp DEFAULT current_timestamp,
    updated_at timestamp DEFAULT current_timestamp,
    deleted_at timestamp DEFAULT current_timestamp,
    constraint secondment_pkey_id primary key (id),
    constraint secondment_fk_employees_id FOREIGN key (employees_id) REFERENCES employees (id) on delete RESTRICT,
    constraint secondment_fk_admins_id FOREIGN key (admins_id) REFERENCES admins (id) on delete RESTRICT
);
